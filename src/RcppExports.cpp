// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// begin_redirect_stderr
int begin_redirect_stderr(String filepath, bool append);
RcppExport SEXP _r2dup2_begin_redirect_stderr(SEXP filepathSEXP, SEXP appendSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type filepath(filepathSEXP);
    Rcpp::traits::input_parameter< bool >::type append(appendSEXP);
    rcpp_result_gen = Rcpp::wrap(begin_redirect_stderr(filepath, append));
    return rcpp_result_gen;
END_RCPP
}
// end_redirect_stderr
int end_redirect_stderr(int old_stderr);
RcppExport SEXP _r2dup2_end_redirect_stderr(SEXP old_stderrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type old_stderr(old_stderrSEXP);
    rcpp_result_gen = Rcpp::wrap(end_redirect_stderr(old_stderr));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_r2dup2_begin_redirect_stderr", (DL_FUNC) &_r2dup2_begin_redirect_stderr, 2},
    {"_r2dup2_end_redirect_stderr", (DL_FUNC) &_r2dup2_end_redirect_stderr, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_r2dup2(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
