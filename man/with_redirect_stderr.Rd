% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/with_redirect_stderr.R
\name{with_redirect_stderr}
\alias{with_redirect_stderr}
\title{Temporarily redirect the standard error to a file}
\usage{
with_redirect_stderr(expression, file, append = FALSE)
}
\arguments{
\item{expression}{The code to evaluate while redirecting stderr.}

\item{file}{The file to which all text will be redirected.}

\item{append}{Whether to append to the file, when it already exists.
By default (false), the file is truncated. If the file does not exist,
it is created.}
}
\description{
This method allows to capture all texts sent to the \emph{standard error}
stream (stderr).
In contrast with \code{\link[utils:capture.output]{utils::capture.output()}}, which only operates at
the R level and deals with R objects, this method truly redirects the
stream at a low (system) level.
Thus, the redirection works for low-level system calls, including
external processes invoked through \code{\link[base:system]{base::system()}}.
}
\section{Known problems}{
The redirection does not seem to work when invoked in the R Console
provided by the PyCharm IDE.
In this case, try using the R Console directly from a terminal.
}

\examples{
\dontrun{
with_redirect_stderr(file = "test.err", {
  system("echo This line will be written to test.err! >&2")
})

with_redirect_stderr(file = "test.err", append = TRUE, {
  system("echo This will not truncate the previous line! >&2")
})
}

}
